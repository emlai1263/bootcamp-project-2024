{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/blogPreview.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"blog-description\": \"blogPreview-module___g6pSa__blog-description\",\n  \"blog-img\": \"blogPreview-module___g6pSa__blog-img\",\n  \"blog-title\": \"blogPreview-module___g6pSa__blog-title\",\n  \"div\": \"blogPreview-module___g6pSa__div\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/components/blogPreview.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"next/image\";\r\nimport style from \"./blogPreview.module.css\";\r\nimport Link from \"next/link\";\r\nimport type { Blog } from \"@/app/blogData\";\r\n\r\nexport default function BlogPreview(props: Blog) {\r\n  return (\r\n    <div className={style.div}>\r\n      {/* <Link href={`/blog/${props.slug}`}> */}\r\n      <h3 className={style[\"blog-title\"]}>{props.title}</h3>\r\n      <div className={style[\"blog-img\"]}>\r\n        {/* <Image src={props.image} alt={props.title} width={200} height={200} /> */}\r\n        <Image\r\n          src={props.image}\r\n          alt={props.title}\r\n          width={props.width}\r\n          height={props.height}\r\n          unoptimized\r\n        />\r\n      </div>\r\n      <p className={style[\"blog-description\"]}>{props.description}</p>\r\n      <p className={style[\"blog-description\"]}>\r\n        Posted on: {new Date(props.date).toLocaleDateString()}\r\n      </p>\r\n      {/* </Link> */}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAIe,SAAS,YAAY,KAAW;IAC7C,qBACE,8OAAC;QAAI,WAAW,+IAAA,CAAA,UAAK,CAAC,GAAG;;0BAEvB,8OAAC;gBAAG,WAAW,+IAAA,CAAA,UAAK,CAAC,aAAa;0BAAG,MAAM,KAAK;;;;;;0BAChD,8OAAC;gBAAI,WAAW,+IAAA,CAAA,UAAK,CAAC,WAAW;0BAE/B,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK,MAAM,KAAK;oBAChB,KAAK,MAAM,KAAK;oBAChB,OAAO,MAAM,KAAK;oBAClB,QAAQ,MAAM,MAAM;oBACpB,WAAW;;;;;;;;;;;0BAGf,8OAAC;gBAAE,WAAW,+IAAA,CAAA,UAAK,CAAC,mBAAmB;0BAAG,MAAM,WAAW;;;;;;0BAC3D,8OAAC;gBAAE,WAAW,+IAAA,CAAA,UAAK,CAAC,mBAAmB;;oBAAE;oBAC3B,IAAI,KAAK,MAAM,IAAI,EAAE,kBAAkB;;;;;;;;;;;;;AAK3D"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/database/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst url: string = process.env.MONGO_URI as string;\r\nlet connection: typeof mongoose;\r\n\r\n/**\r\n * Makes a connection to a MongoDB database. If a connection already exists, does nothing\r\n * Call this function at the start of api routes and data fetches\r\n * @returns {Promise<typeof mongoose>}\r\n */\r\nconst connectDB = async () => {\r\n  if (!connection) {\r\n    connection = await mongoose.connect(url);\r\n    return connection;\r\n  }\r\n};\r\n\r\nexport default connectDB;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAc,QAAQ,GAAG,CAAC,SAAS;AACzC,IAAI;AAEJ;;;;CAIC,GACD,MAAM,YAAY;IAChB,IAAI,CAAC,YAAY;QACf,aAAa,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACpC,OAAO;IACT;AACF;uCAEe"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/app/blog/page.tsx"],"sourcesContent":["import React from \"react\";\r\nimport \"../globals.css\";\r\nimport BlogPreview from \"@/components/blogPreview\";\r\nimport blogs from \"../blogData\";\r\nimport connectDB from \"@/database/db\";\r\nimport Blog from \"@/database/blogSchema\";\r\n\r\nasync function getBlogs() {\r\n  await connectDB(); //connect to the database\r\n\r\n  try {\r\n    //query for all blogs, sorted by date\r\n    const blogs = await Blog.find().sort({ date: -1 }).orFail();\r\n    return blogs;\r\n  } catch (err) {\r\n    return null; //return null on failure\r\n  }\r\n}\r\n\r\nexport default async function Blog() {\r\n  const blogs = await getBlogs();\r\n\r\n  return (\r\n    <main>\r\n      <h1 className=\"page-title\">Blogs</h1>\r\n      {blogs && blogs.length > 0 ? (\r\n        blogs.map((blog) => <BlogPreview key={blog._id} {...blog} />)\r\n      ) : (\r\n        <p>No blogs available at the moment. Please check back later!</p>\r\n      )}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n"],"names":[],"mappings":";;;;AAEA;AAEA;;;;;AAGA,eAAe;IACb,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAS,AAAD,KAAK,yBAAyB;IAE5C,IAAI;QACF,qCAAqC;QACrC,MAAM,QAAQ,MAAM,KAAK,IAAI,GAAG,IAAI,CAAC;YAAE,MAAM,CAAC;QAAE,GAAG,MAAM;QACzD,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,OAAO,MAAM,wBAAwB;IACvC;AACF;AAEe,eAAe;IAC5B,MAAM,QAAQ,MAAM;IAEpB,qBACE,8OAAC;;0BACC,8OAAC;gBAAG,WAAU;0BAAa;;;;;;YAC1B,SAAS,MAAM,MAAM,GAAG,IACvB,MAAM,GAAG,CAAC,CAAC,qBAAS,8OAAC,iIAAA,CAAA,UAAW;oBAAiB,GAAG,IAAI;mBAAlB,KAAK,GAAG;;;;0CAE9C,8OAAC;0BAAE;;;;;;;;;;;;AAIX;uCAEe"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}