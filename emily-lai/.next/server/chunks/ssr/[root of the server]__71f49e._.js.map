{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/database/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst url: string = process.env.MONGO_URI as string;\r\nlet connection: typeof mongoose;\r\n\r\n/**\r\n * Makes a connection to a MongoDB database. If a connection already exists, does nothing\r\n * Call this function at the start of api routes and data fetches\r\n * @returns {Promise<typeof mongoose>}\r\n */\r\nconst connectDB = async () => {\r\n  if (!connection) {\r\n    connection = await mongoose.connect(url);\r\n    return connection;\r\n  }\r\n};\r\n\r\nexport default connectDB;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAc,QAAQ,GAAG,CAAC,SAAS;AACzC,IAAI;AAEJ;;;;CAIC,GACD,MAAM,YAAY;IAChB,IAAI,CAAC,YAAY;QACf,aAAa,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACpC,OAAO;IACT;AACF;uCAEe"}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/database/blogSchema.ts"],"sourcesContent":["import mongoose, { Schema } from \"mongoose\";\r\n\r\n// typescript type (can also be an interface)\r\nexport type Blog = {\r\n  title: string;\r\n  slug: string;\r\n  date: Date;\r\n  description: string; // for preview\r\n  content: string; // text content for individual blog page\r\n  image: string; // url for string in public\r\n  width: number; // width of image\r\n  height: number; // height of image\r\n  image_alt: string; // alt for image\r\n  //   comments: IComment[]; // array for comments\r\n  comments: [];\r\n};\r\n\r\n// mongoose schema\r\nconst blogSchema = new Schema<Blog>({\r\n  title: { type: String, required: true },\r\n  slug: { type: String, required: true },\r\n  date: { type: Date, required: false, default: new Date() },\r\n  description: { type: String, required: true },\r\n  image: { type: String, required: true },\r\n  image_alt: { type: String, required: true },\r\n  content: { type: String, required: true },\r\n});\r\n\r\n// defining the collection and model\r\nconst Blog = mongoose.models[\"blogs\"] || mongoose.model(\"blogs\", blogSchema);\r\n\r\nexport default Blog;\r\n"],"names":[],"mappings":";;;AAAA;;AAiBA,kBAAkB;AAClB,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAO;IAClC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,MAAM;QAAE,MAAM;QAAM,UAAU;QAAO,SAAS,IAAI;IAAO;IACzD,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,WAAW;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC1C,SAAS;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC1C;AAEA,oCAAoC;AACpC,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAElD"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/app/page.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./globals.css\";\nimport connectDB from \"@/database/db\";\n// import Blog from \"./blogData\";\nimport Blog from \"@/database/blogSchema\";\n\nasync function getBlogs() {\n  await connectDB(); //connect to the database\n\n  try {\n    //query for all blogs, sorted by date\n    const blogs = await Blog.find().sort({ date: -1 }).orFail();\n    return blogs;\n  } catch (err) {\n    return null; //return null on failure\n  }\n}\n\nconst Index: React.FC = () => {\n  return (\n    <>\n      <main className=\"page-title\">\n        <div className=\"about-text\">\n          <h1>Welcome to my page! :D</h1>\n          <p>\n            Hello! ^^)7 I'm Emily, a <b>4th year computer science major</b> at\n            Cal Poly San Luis Obispo, and I <em>love</em> playing video games!\n          </p>\n          <p>Some of my favorite series are:</p>\n          <ul>\n            <li>Pokemon</li>\n            <li>Ace Attorney</li>\n            <li>Infinity Nikki</li>\n          </ul>\n        </div>\n      </main>\n      <footer className=\"footer\">\n        Â© 2024 Emily's Website | All Rights Reserved\n      </footer>\n    </>\n  );\n};\n\nexport default Index;\n"],"names":[],"mappings":";;;;AAEA;AACA,iCAAiC;AACjC;;;;;AAEA,eAAe;IACb,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAS,AAAD,KAAK,yBAAyB;IAE5C,IAAI;QACF,qCAAqC;QACrC,MAAM,QAAQ,MAAM,6HAAA,CAAA,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAAE,MAAM,CAAC;QAAE,GAAG,MAAM;QACzD,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,OAAO,MAAM,wBAAwB;IACvC;AACF;AAEA,MAAM,QAAkB;IACtB,qBACE;;0BACE,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;sCAAG;;;;;;sCACJ,8OAAC;;gCAAE;8CACwB,8OAAC;8CAAE;;;;;;gCAAmC;8CAC/B,8OAAC;8CAAG;;;;;;gCAAS;;;;;;;sCAE/C,8OAAC;sCAAE;;;;;;sCACH,8OAAC;;8CACC,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;8CACJ,8OAAC;8CAAG;;;;;;;;;;;;;;;;;;;;;;;0BAIV,8OAAC;gBAAO,WAAU;0BAAS;;;;;;;;AAKjC;uCAEe"}},
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 218, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 224, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;iBACVC,MAAMZ,UAAUa,QAAQ;sBACxBC,IAAAA,CAAM,CAAA;gBAAA,QAAA;oBAAA,IAAA;oBAAA;iBAAA;;eACNC,UAAU;;SACV,2CAA2C;cAC3CC,IAAAA;YAAAA,GAAY,GAAA;iBACZC,MAAAA,IAAU,IAAA;wBAAA;4BACVC,KAAAA,CAAAA,GAAAA,2KAAAA,CAAAA,KAAU,EAAE,eAAA,EAAA,MAAA,MAAA,MAAA,EAAA,iBAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,GAAA,CAAA,KAAA,CAAA,KAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA,EAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACAC,MAAU,CAAA,YAAA,CAAA;;qBACRC,YAAYnB;aACd;QACF,CAAE;QAAA,UAAA;YAAA,IAAA;YAAA;SAAA","ignoreList":[0]}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}