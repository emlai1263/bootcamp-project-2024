{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/components/blogPreview.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"blog-description\": \"blogPreview-module___g6pSa__blog-description\",\n  \"blog-img\": \"blogPreview-module___g6pSa__blog-img\",\n  \"blog-title\": \"blogPreview-module___g6pSa__blog-title\",\n  \"div\": \"blogPreview-module___g6pSa__div\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/components/blogPreview.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"next/image\";\r\nimport style from \"./blogPreview.module.css\";\r\nimport Link from \"next/link\";\r\nimport type { Blog } from \"@/app/blogData\";\r\n\r\nexport default function BlogPreview(props: Blog) {\r\n  return (\r\n    <div className={style.div}>\r\n      {/* <Link href={`/blog/${props.slug}`}> */}\r\n      <h3 className={style[\"blog-title\"]}>{props.title}</h3>\r\n      <div className={style[\"blog-img\"]}>\r\n        {/* <Image src={props.image} alt={props.title} width={200} height={200} /> */}\r\n        <Image\r\n          src={props.image}\r\n          alt={props.title}\r\n          width={props.width}\r\n          height={props.height}\r\n          unoptimized\r\n        />\r\n      </div>\r\n      <p className={style[\"blog-description\"]}>{props.description}</p>\r\n      <p className={style[\"blog-description\"]}>\r\n        Posted on: {new Date(props.date).toLocaleDateString()}\r\n      </p>\r\n      {/* </Link> */}\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAIe,SAAS,YAAY,KAAW;IAC7C,qBACE,8OAAC;QAAI,WAAW,+IAAA,CAAA,UAAK,CAAC,GAAG;;0BAEvB,8OAAC;gBAAG,WAAW,+IAAA,CAAA,UAAK,CAAC,aAAa;0BAAG,MAAM,KAAK;;;;;;0BAChD,8OAAC;gBAAI,WAAW,+IAAA,CAAA,UAAK,CAAC,WAAW;0BAE/B,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK,MAAM,KAAK;oBAChB,KAAK,MAAM,KAAK;oBAChB,OAAO,MAAM,KAAK;oBAClB,QAAQ,MAAM,MAAM;oBACpB,WAAW;;;;;;;;;;;0BAGf,8OAAC;gBAAE,WAAW,+IAAA,CAAA,UAAK,CAAC,mBAAmB;0BAAG,MAAM,WAAW;;;;;;0BAC3D,8OAAC;gBAAE,WAAW,+IAAA,CAAA,UAAK,CAAC,mBAAmB;;oBAAE;oBAC3B,IAAI,KAAK,MAAM,IAAI,EAAE,kBAAkB;;;;;;;;;;;;;AAK3D"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/database/db.ts"],"sourcesContent":["import mongoose from \"mongoose\";\r\n\r\nconst url: string = process.env.MONGO_URI as string;\r\nlet connection: typeof mongoose;\r\n\r\n/**\r\n * Makes a connection to a MongoDB database. If a connection already exists, does nothing\r\n * Call this function at the start of api routes and data fetches\r\n * @returns {Promise<typeof mongoose>}\r\n */\r\nconst connectDB = async () => {\r\n  if (!connection) {\r\n    connection = await mongoose.connect(url);\r\n    return connection;\r\n  }\r\n};\r\n\r\nexport default connectDB;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAc,QAAQ,GAAG,CAAC,SAAS;AACzC,IAAI;AAEJ;;;;CAIC,GACD,MAAM,YAAY;IAChB,IAAI,CAAC,YAAY;QACf,aAAa,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC;QACpC,OAAO;IACT;AACF;uCAEe"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/database/blogSchema.ts"],"sourcesContent":["import mongoose, { Schema } from \"mongoose\";\r\n\r\n// typescript type (can also be an interface)\r\ntype Blog = {\r\n  title: string;\r\n  slug: string;\r\n  date: Date;\r\n  description: string; // for preview\r\n  content: string; // text content for individual blog page\r\n  image: string; // url for string in public\r\n  width: number; // width of image\r\n  height: number; // height of image\r\n  image_alt: string; // alt for image\r\n  //   comments: IComment[]; // array for comments\r\n  comments: [];\r\n};\r\n\r\n// mongoose schema\r\nconst blogSchema = new Schema<Blog>({\r\n  title: { type: String, required: true },\r\n  slug: { type: String, required: true },\r\n  date: { type: Date, required: false, default: new Date() },\r\n  description: { type: String, required: true },\r\n  image: { type: String, required: true },\r\n  image_alt: { type: String, required: true },\r\n  content: { type: String, required: true },\r\n});\r\n\r\n// defining the collection and model\r\nconst Blog = mongoose.models[\"blogs\"] || mongoose.model(\"blogs\", blogSchema);\r\n\r\nexport default Blog;\r\n"],"names":[],"mappings":";;;AAAA;;AAiBA,kBAAkB;AAClB,MAAM,aAAa,IAAI,yGAAA,CAAA,SAAM,CAAO;IAClC,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,MAAM;QAAE,MAAM;QAAM,UAAU;QAAO,SAAS,IAAI;IAAO;IACzD,aAAa;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC5C,OAAO;QAAE,MAAM;QAAQ,UAAU;IAAK;IACtC,WAAW;QAAE,MAAM;QAAQ,UAAU;IAAK;IAC1C,SAAS;QAAE,MAAM;QAAQ,UAAU;IAAK;AAC1C;AAEA,oCAAoC;AACpC,MAAM,OAAO,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,QAAQ,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,SAAS;uCAElD"}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Emily%20Lai/Documents/CS/Hack4Impact/bootcamp-project-2024/emily-lai/src/app/page.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./globals.css\";\nimport BlogPreview from \"@/components/blogPreview\";\nimport blogs from \"./blogData\";\nimport connectDB from \"@/database/db\";\n// import Blog from \"./blogData\";\nimport Blog from \"@/database/blogSchema\";\n\nasync function getBlogs() {\n  await connectDB(); //connect to the database\n\n  try {\n    //query for all blogs, sorted by date\n    const blogs = await Blog.find().sort({ date: -1 }).orFail();\n    return blogs;\n  } catch (err) {\n    return null; //return null on failure\n  }\n}\n\nconst Index: React.FC = () => {\n  const blogs = await getBlogs();\n  return (\n    <>\n      <main className=\"page-title\">\n        <div className=\"about-text\">\n          <h1>Welcome to my page! :D</h1>\n          <p>\n            Hello! ^^)7 I'm Emily, a <b>4th year computer science major</b> at\n            Cal Poly San Luis Obispo, and I <em>love</em> playing video games!\n          </p>\n          <p>Some of my favorite series are:</p>\n          <ul>\n            <li>Pokemon</li>\n            <li>Ace Attorney</li>\n            <li>Infinity Nikki</li>\n          </ul>\n        </div>\n        <h3>Below are my blog posts!</h3>\n        {blogs.map((blog) => (\n          <BlogPreview key={blog.slug} {...blog} />\n        ))}\n      </main>\n      <footer className=\"footer\">\n        Â© 2024 Emily's Website | All Rights Reserved\n      </footer>\n    </>\n  );\n};\n\nexport default Index;\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA,iCAAiC;AACjC;;;;;;AAEA,eAAe;IACb,MAAM,CAAA,GAAA,qHAAA,CAAA,UAAS,AAAD,KAAK,yBAAyB;IAE5C,IAAI;QACF,qCAAqC;QACrC,MAAM,QAAQ,MAAM,6HAAA,CAAA,UAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAAE,MAAM,CAAC;QAAE,GAAG,MAAM;QACzD,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,OAAO,MAAM,wBAAwB;IACvC;AACF;AAEA,MAAM,QAAkB;IACtB,MAAM,QAAQ,MAAM;IACpB,qBACE;;0BACE,8OAAC;gBAAK,WAAU;;kCACd,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;;oCAAE;kDACwB,8OAAC;kDAAE;;;;;;oCAAmC;kDAC/B,8OAAC;kDAAG;;;;;;oCAAS;;;;;;;0CAE/C,8OAAC;0CAAE;;;;;;0CACH,8OAAC;;kDACC,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;kDACJ,8OAAC;kDAAG;;;;;;;;;;;;;;;;;;kCAGR,8OAAC;kCAAG;;;;;;oBACH,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC,iIAAA,CAAA,UAAW;4BAAkB,GAAG,IAAI;2BAAnB,KAAK,IAAI;;;;;;;;;;;0BAG/B,8OAAC;gBAAO,WAAU;0BAAS;;;;;;;;AAKjC;uCAEe"}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}